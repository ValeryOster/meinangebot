{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/manage/manage.component.ts","webpack:///src/app/manage/manage.component.html","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/posts/posts.component.ts","webpack:///src/app/posts/posts.component.html","webpack:///src/app/service/bwb.service.ts","webpack:///src/app/service/discounter.service.ts","webpack:///src/app/service/posts.service.ts","webpack:///src/app/service/security/auth.guard.ts","webpack:///src/app/service/security/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","bwbService","auth","title","getTitle","subscribe","srv","console","log","AppModule","declarations","providers","bootstrap","HomeComponent","router","navigate","goToPostPage","ManageComponent","discService","getAll","value","discounters","startGather","gather","PostComponent","route","postsService","params","post","getById","PostsComponent","Bewerbung","BwbService","http","url","get","providedIn","Discounter","DiscounterService","PostsService","posts","text","find","p","AuthGuard","authService","state","isAuthenticated","isAuth","queryParams","AuthService","setTimeout","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n}\n","<h1>About page</h1>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet, magnam!</p>\n\n<p><a href=\"#\">Show Extra</a></p>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {AboutComponent} from \"./about/about.component\";\nimport {PostsComponent} from \"./posts/posts.component\";\nimport {PostComponent} from \"./post/post.component\";\nimport {ManageComponent} from \"./manage/manage.component\";\nimport {AuthGuard} from \"./service/security/auth.guard\";\n\n\nconst routes: Routes = [\n  {path: '',component: HomeComponent},\n  {path: 'about',component: AboutComponent},\n  {path: 'posts',component: PostsComponent},\n  {path: 'posts/:id', component: PostComponent},\n  {path: 'manage', component: ManageComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {BwbService} from \"./service/bwb.service\";\nimport {AuthService} from \"./service/security/auth.service\";\nexport interface Post {\n  title: string\n  text: string\n  id?: number\n}\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Hier entsteht Seite mit Angeboten von allen Märkte';\n\n  constructor(public bwbService:BwbService, public auth:AuthService) {\n  }\n\n  ngOnInit(): void {\n    this.bwbService.getTitle().subscribe(srv=>{\n      console.log(srv);\n    })\n  }\n\n}\n","<nav class=\"navbar\">\n  <h1>\n    <a [routerLink]=\"['/']\">Angular Routing</a>\n  </h1>\n  <ul>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <a [routerLink]=\"['/']\">Home</a>\n    </li>\n    <li routerLinkActive=\"active\"><a routerLink=\"/posts\">Posts</a></li>\n    <li routerLinkActive=\"active\"><a [routerLink]=\"['/about']\">About</a></li>\n    <li routerLinkActive=\"active\"><a [routerLink]=\"['/manage']\">Managing</a></li>\n    <li><button class=\"btn\" (click)=\"auth.login()\">Login</button></li>\n    <li><button class=\"btn\" (click)=\"auth.logout()\">Logout</button></li>\n  </ul>\n</nav>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {PostComponent} from \"./post/post.component\";\nimport {PostsComponent} from \"./posts/posts.component\";\nimport {AboutComponent} from \"./about/about.component\";\nimport { ManageComponent } from './manage/manage.component';\nimport {AuthGuard} from \"./service/security/auth.guard\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PostComponent,\n    PostsComponent,\n    AboutComponent,\n    ManageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component} from '@angular/core'\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  constructor(private router: Router) {\n  }\n\n  goToPostPage() {\n    this.router.navigate(['/posts']);\n  }\n}\n","<h1>Home page</h1>\n\n<div>\n  <button class=\"btn\" (click)=\"goToPostPage()\">Go to Posts</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Discounter, DiscounterService} from \"../service/discounter.service\";\n\n@Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.css']\n})\nexport class ManageComponent implements OnInit {\n\n  discounters: Discounter[];\n  constructor(public discService:DiscounterService) { }\n\n  ngOnInit(): void {\n    this.discService.getAll().subscribe(value => {\n      this.discounters = value;\n    })\n  }\n\n  gather():void {\n    this.discService.startGather().subscribe();\n  }\n}\n","\n<button class=\"btn\" (click)=\"gather()\"> Sammeln</button>\n<hr>\n\n<div>\n  <table>\n    <tr>\n      <th>Datum</th>\n      <th>Time</th>\n      <th>Penny</th>\n      <th>Netto</th>\n      <th>Lidl</th>\n    </tr>\n    <tr *ngFor=\"let disc of discounters\">\n      <td>{{disc.date}}</td>\n      <td>{{disc.time}}</td>\n      <td>{{disc.discounter}}</td>\n    </tr>\n  </table>\n</div>\n","import {Component, OnInit} from '@angular/core'\nimport {ActivatedRoute, Params} from \"@angular/router\";\nimport {PostsService} from \"../service/posts.service\";\nimport {Post} from \"../app.component\";\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n  post: Post\n\n  constructor(private route: ActivatedRoute, private postsService: PostsService) {\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.post = this.postsService.getById(+params.id);\n    })\n  }\n}\n","<div>\n  <button class=\"btn\">Back</button>\n\n  <h1>{{post.title}}</h1>\n\n  <p>{{post.text}}</p>\n\n  <button class=\"btn btn-danger\" >Load 4 post</button>\n</div>\n","import {Component} from '@angular/core'\nimport {PostsService} from \"../service/posts.service\";\n\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent {\n  constructor(public postsService: PostsService) {}\n}\n","<h1>Posts page</h1>\n\n<button class=\"btn\">\n  Show Ids\n</button>\n<button class=\"btn\">\n  Show Ids (program)\n</button>\n\n<div class=\"card\" *ngFor=\"let post of postsService.posts\">\n  <h4>\n    <a [routerLink]=\"['/posts', post.id]\">\n      <strong>(ID {{post.id}})</strong>\n      {{post.title}}\n    </a>\n  </h4>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport class Bewerbung {\r\n  id: number;\r\n  userId: number;\r\n  firmName: string;\r\n  firmAdress: string;\r\n  ansprechPartner: string;\r\n  telNummer: string;\r\n  zustand: string;\r\n  notizen: string;\r\n  bewerbungsDatum: string;\r\n  email: string;\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class BwbService {\r\n  private url = 'http://localhost:8080/';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getTitle(): Observable<string> {\r\n    return this.http.get<string>(this.url + 'home');\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\nexport class Discounter {\n  id: number;\n  date: string;\n  discounter: string;\n  time:string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiscounterService {\n\n  private url = 'http://localhost:8080/manage/';\n\n  constructor(private http: HttpClient) {  }\n\n  getAll(): Observable<Discounter[]>{\n    let url = this.url+'start';\n\n    return this.http.get<Discounter[]>(url)\n  }\n\n  startGather(){\n    let url = this.url+'gather';\n    return this.http.get(url);\n  }\n}\n","import {Injectable} from '@angular/core'\n\nexport interface Post {\n  title: string\n  text: string\n  id: number\n}\n\n@Injectable({providedIn: 'root'})\nexport class PostsService {\n  posts: Post[] = [\n    {title: 'Post 1', text: 'Sample text for post 1', id: 11},\n    {title: 'Post 2', text: 'Sample text for post 2', id: 22},\n    {title: 'Post 3', text: 'Sample text for post 3', id: 33},\n    {title: 'Post 4', text: 'Sample text for post 4', id: 44},\n  ]\n\n  getById(id: number) {\n    return this.posts.find(p => p.id === id)\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService:AuthService,\r\n              private router: Router) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.authService.isAuthenticated().then(isAuth=>{\r\n      if (isAuth) {\r\n        return true;\r\n      }else {\r\n        this.router.navigate(['/'],{\r\n          queryParams:{\r\n            auth:false\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService{\r\n  private isAuth = false;\r\n  private url = 'http://localhost:8080/';\r\n\r\n  login() {\r\n    this.isAuth = true;\r\n  }\r\n\r\n  logout() {\r\n    this.isAuth = false;\r\n  }\r\n\r\n  isAuthenticated(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      setTimeout(() => {\r\n        resolve(this.isAuth);\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
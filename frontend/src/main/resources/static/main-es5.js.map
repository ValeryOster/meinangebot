{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/manage/gathering/gathering.component.ts","webpack:///src/app/manage/gathering/gathering.component.html","webpack:///src/app/manage/manage.component.ts","webpack:///src/app/manage/manage.component.html","webpack:///src/app/offers/offers.component.ts","webpack:///src/app/offers/offers.component.html","webpack:///src/app/service/discounter.service.ts","webpack:///src/app/service/security/auth.guard.ts","webpack:///src/app/service/security/auth.service.ts","webpack:///src/app/service/security/helper/auth.interceptor.ts","webpack:///src/app/service/security/token-storage.service.ts","webpack:///src/app/service/start.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","auth","AppComponent","router","title","navigate","AppModule","declarations","providers","bootstrap","HomeComponent","formBuilder","arrowUp","discounterBox","name","form","group","dicounters","addCheckboxes","forEach","value","ordersFormArray","push","selectedOrderIds","map","checked","i","filter","v","controls","submit","LoginComponent","authService","token","loginForm","username","password","login","f","subscribe","success","console","log","saveToken","saveUser","GatheringComponent","discService","buttonActive","getAll","discounters","$event","list","Array","str","startGather","ManageComponent","OffersComponent","service","Map","lidlLogo","pennyLogo","strings","Object","length","mapToDiscount","set","offers","discounterMap","sort","a","b","kategorie","kat","value1","index","array","indexOf","kategori","offers1","Discounter","expiryDate","DiscounterService","http","url","get","post","providedIn","AuthGuard","route","state","isAuthenticated","queryParams","AUTH_API","httpOptions","headers","AuthService","credentials","user","email","TOKEN_HEADER_KEY","AuthInterceptor","next","authReq","getToken","clone","handle","authInterceptorProviders","provide","useClass","multi","TOKEN_KEY","USER_KEY","TokenStorageService","window","sessionStorage","clear","removeItem","setItem","getItem","JSON","stringify","parse","Offer","StartService","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n}\n","<h1>About page</h1>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet, magnam!</p>\n\n<p><a href=\"#\">Show Extra</a></p>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {AboutComponent} from \"./about/about.component\";\nimport {ManageComponent} from \"./manage/manage.component\";\nimport {AuthGuard} from \"./service/security/auth.guard\";\nimport {LoginComponent} from \"./login/login.component\";\n\n\nconst routes: Routes = [\n  {path: '',component: HomeComponent},\n  {path: 'about',component: AboutComponent},\n  {path: 'manage', component: ManageComponent, canActivate:[AuthGuard] },\n  {path: 'about',component: AboutComponent},\n  {path: 'login',component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {TokenStorageService} from \"./service/security/token-storage.service\";\nexport interface Post {\n  title: string\n  text: string\n  id?: number\n}\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Hier entsteht Seite mit Angeboten von allen Märkte';\n\n  constructor( public auth:TokenStorageService, private router:Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar\">\n  <h1>\n    <a [routerLink]=\"['/']\">Discounter Angebote</a>\n  </h1>\n  <ul>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <a [routerLink]=\"['/']\">Home</a>\n    </li>\n    <li routerLinkActive=\"active\"><a [routerLink]=\"['/about']\">About</a></li>\n    <li *ngIf=\"auth.isAuthenticated()\" routerLinkActive=\"active\"><a [routerLink]=\"['/manage']\">Managing</a></li>\n    <li *ngIf=\"!auth.isAuthenticated()\"><button class=\"btn\" (click)=\"goToLogin()\">Login</button></li>\n    <li *ngIf=\"auth.isAuthenticated()\"><button class=\"btn\" (click)=\"auth.signOut()\">Logout</button></li>\n  </ul>\n</nav>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {AboutComponent} from \"./about/about.component\";\nimport { ManageComponent } from './manage/manage.component';\nimport { OffersComponent } from './offers/offers.component';\nimport { GatheringComponent } from './manage/gathering/gathering.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {authInterceptorProviders} from \"./service/security/helper/auth.interceptor\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    ManageComponent,\n    OffersComponent,\n    GatheringComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatCardModule,\n    FontAwesomeModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [authInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component} from '@angular/core'\nimport {Router} from \"@angular/router\";\nimport {FormArray, FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\nimport {faArrowUp} from \"@fortawesome/free-solid-svg-icons/faArrowUp\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent {\n  arrowUp = faArrowUp;\n  form: FormGroup;\n  discounterBox = [\n    {id: 100, name: 'PENNY.'},\n    {id: 200, name: 'LIDL'}\n  ];\n\n  get ordersFormArray() {\n    return this.form.controls.dicounters as FormArray;\n  }\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      dicounters: new FormArray([])\n    });\n    this.addCheckboxes();\n  }\n\n  private addCheckboxes() {\n    this.discounterBox.forEach( value =>{\n      this.ordersFormArray.push(new FormControl(true));\n    });\n  }\n\n  submit() {\n    const selectedOrderIds = this.form.value.dicounters\n      .map((checked, i) => checked ? this.discounterBox[i].name : null)\n      .filter(v => v !== null);\n\n  }\n}\n","\n\n<div class=\"container\">\n  <h3>Aktiviere Checkbox um die entsprechende Angebotte zu bekommen</h3>\n  <div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n      <label formArrayName=\"dicounters\" *ngFor=\"let dicounter of ordersFormArray.controls;let i = index\">\n        <input type=\"checkbox\" [formControlName]=\"i\" >\n        {{discounterBox[i].name}}\n      </label>\n      <button class=\"btn\">Zeigen</button>\n    </form>\n  </div>\n\n</div>\n\n<div>\n  <app-offers></app-offers>\n</div>\n\n<a href=\"#\" id=\"scroll-to-top\" class=\"back-to-top\" style=\"display: inline;\">\n  <fa-icon [icon]=\"arrowUp\"></fa-icon>\n</a>\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService} from \"../service/security/auth.service\";\r\nimport {TokenStorageService} from \"../service/security/token-storage.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n  constructor(private authService: AuthService, private formBuilder: FormBuilder, private router: Router, private token: TokenStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: [''],\r\n      password: ['']\r\n    });\r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  login() {\r\n    this.authService.login(\r\n      {\r\n        username: this.f.username.value,\r\n        password: this.f.password.value\r\n      }\r\n    ).subscribe(success => {\r\n      if (success) {\r\n        console.log(\"is success!\")\r\n        this.token.saveToken(success.token);\r\n        this.token.saveUser(success);\r\n        this.router.navigate(['/']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"header center\">Log In</div>\r\n\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"username\" placeholder=\"Username\" autocomplete=\"off\" formControlName=\"username\" required>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <input matInput type=\"password\" id=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\r\n  </mat-form-field>\r\n\r\n  <div class=\"actions\">\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!loginForm.valid\">LOG IN</button>\r\n  </div>\r\n\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\nimport {Discounter, DiscounterService} from \"../../service/discounter.service\";\nimport {FormArray, FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-gathering',\n  templateUrl: './gathering.component.html',\n  styleUrls: ['./gathering.component.css']\n})\nexport class GatheringComponent implements OnInit {\n\n  form: FormGroup;\n  discounterBox = [\n    {id: 100, name: 'PENNY'},\n    {id: 200, name: 'LIDL'},\n    {id: 300, name: 'ALDI'}\n\n  ];\n  discounters: Discounter[];\n  buttonActive = true;\n  constructor(public discService:DiscounterService,\n              private router: Router,\n              private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      dicounters: new FormArray([])\n    });\n    this.addCheckboxes();\n  }\n\n  ngOnInit(): void {\n    this.discService.getAll().subscribe(value => {\n      this.discounters = value;\n    });\n  }\n\n  setBtnActivate($event: Event) {\n    this.buttonActive = !this.buttonActive;\n  }\n\n  submit() {\n    let list = new Array() ;\n    this.form.value.dicounters.map((checked, i) =>{\n        if(checked){\n          var str:string;\n          str = this.discounterBox[i].name\n          list.push(str);\n        }});\n    this.discService.startGather(list).subscribe();\n  }\n\n  private addCheckboxes() {\n    this.discounterBox.forEach( value =>{\n      this.ordersFormArray.push(new FormControl(true));\n    });\n  }\n\n  get ordersFormArray() {\n    return this.form.controls.dicounters as FormArray;\n  }\n}\n","\n<div>\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <label formArrayName=\"dicounters\" *ngFor=\"let dicounter of ordersFormArray.controls;let i = index\">\n      <input type=\"checkbox\" [formControlName]=\"i\" >\n      {{discounterBox[i].name}}\n    </label>\n    <div>\n      <label for=\"aktivate\">\n        Aktiviere -><input id=\"aktivate\" type=\"checkbox\" (change)=\"buttonActive = !buttonActive\" >\n      </label>\n      <button class=\"btn\" [disabled]=\"buttonActive\"> Sammeln</button>\n    </div>\n  </form>\n</div>\n<hr>\n\n<div>\n  <table>\n    <tr>\n      <th>Gather date</th>\n      <th>Expiry date</th>\n      <th>Discounts</th>\n    </tr>\n    <tr *ngFor=\"let disc of discounters\">\n      <td>{{disc.gatherDate}}</td>\n      <td>{{disc.expiryDate}}</td>\n      <td>\n        {{disc.discount.Penny}},\n        {{disc.discount.Netto}},\n        {{disc.discount.Lidl}}\n      </td>\n    </tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.css']\n})\nexport class ManageComponent implements OnInit {\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<mat-tab-group>\n  <mat-tab >\n    <ng-template mat-tab-label>\n      Sammeln\n    </ng-template>\n    <ng-template matTabContent>\n      <app-gathering></app-gathering>\n    </ng-template>\n  </mat-tab>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      Kategorie Bestimmung\n    </ng-template>\n  </mat-tab>\n\n</mat-tab-group>\n","import {Component, OnInit} from '@angular/core';\nimport {Offer, StartService} from \"../service/start.service\";\n\n@Component({\n  selector: 'app-offers',\n  templateUrl: './offers.component.html',\n  styleUrls: ['./offers.component.css']\n})\nexport class OffersComponent implements OnInit {\n  offers: Offer[];\n  discounters: Map<string, Map<string, string>> = new Map<string, Map<string, string>>();\n  lidlLogo = \"http://localhost:8080/lidl/lidl.png\";\n  pennyLogo = \"http://localhost:8080/penny/penny.png\";\n\n\n  constructor(public service: StartService) {}\n\n  ngOnInit(): void {\n    this.service.getAll().subscribe(value => {\n      let strings = Object.keys(value);\n      for (let i = 0; i < strings.length; i++) {\n        let map = this.mapToDiscount(value[strings[i]]);\n        this.discounters.set(strings[i], map);\n      }\n    })\n  }\n\n  mapToDiscount(offers: Offer[]) {\n   let discounterMap = new Map();\n    offers = offers.sort((a, b) => (a.kategorie < b.kategorie ? -1 : 1))\n\n    let kat = offers.map(value1 => value1.kategorie).filter(\n      (value1, index, array) => array.indexOf(value1) == index\n    );\n\n    kat.forEach(kategori => {\n      let offers1 = offers.filter(value1 => value1.kategorie == kategori);\n      discounterMap.set(kategori, offers1);\n    })\n\n    return discounterMap;\n  }\n}\n","<mat-tab-group>\n  <div *ngFor=\"let discounter of discounters|keyvalue\">\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <ng-template [ngIf]=\"discounter.key === 'Lidl'\">\n          <img src=\"{{lidlLogo}}\" class=\"logoImage\">\n        </ng-template>\n        <ng-template [ngIf]=\"discounter.key === 'Penny'\">\n          <img src=\"{{pennyLogo}}\" class=\"logoImage\">\n        </ng-template>\n      </ng-template>\n\n\n      <div class=\"kategorieLinks\">\n        <ul class=\"border\">\n          <li *ngFor=\"let kategori of discounter.value|keyvalue\">\n            <a href=\"#{{kategori.key}}\">{{kategori.key}}</a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"kategorie\" *ngFor=\"let kategori of discounter.value|keyvalue\">\n        <div id=\"{{kategori.key}}\" class=\"kategorieName\">\n          {{kategori.key}}\n        </div>\n        <div class=\"cards\">\n          <div *ngFor=\"let offer of kategori.value\">\n            <a href=\"{{offer.url}}\">\n              <mat-card class=\"simple-card\" role=\"group\">\n                <mat-card-header>\n                  <div class=\"actuel\">\n                    <span class=\"actuelVon\" *ngIf=\"offer.vonDate\">von: </span> {{offer.vonDate | date:'dd.MM'}}\n                    <span class=\"actuelBis\">bis: </span> {{offer.bisDate | date:'dd.MM'}}\n                  </div>\n                </mat-card-header>\n                <!-- localhost fur entwicklung.In produktion entfernen.-->\n                <img mat-card-lg-image src=\"http://localhost:8080{{offer.imageLink}}\" alt=\"Photo of a Shiba Inu\">\n                <mat-card-content>\n                  <div class=\"container\">\n                    <div class=\"name\">\n                      <h4>{{offer.produktName}}</h4>\n                    </div>\n                    <div class=\"prise\">\n                      <div class=\"oldprise\" *ngIf=\"!(offer.produktRegularPrise === 'null')\">\n                        {{offer.produktRegularPrise}}\n                      </div>\n                      <div class=\"actuelprise\">\n                        {{offer.produktPrise}}\n                      </div>\n                    </div>\n                  </div>\n                </mat-card-content>\n              </mat-card>\n            </a>\n          </div>\n          <br>\n          <br>\n          <br>\n          <br>\n          <br>\n          <br>\n          <br>\n          <br>\n        </div>\n      </div>\n    </mat-tab>\n  </div>\n</mat-tab-group>\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\nexport class Discounter {\n  id: number;\n  gatherDate: string;\n  discount: {\n    Penny: string;\n    Netto: string;\n    Lidl: string;\n  };\n  duration: string;\n  expiryDate: string;\n\n  getDate():string{\n    return this.expiryDate;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiscounterService {\n\n  private url = 'http://localhost:8080/manage/';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(): Observable<Discounter[]> {\n    let url = this.url + 'start';\n\n    return this.http.get<Discounter[]>(url)\n  }\n\n  startGather(selectedOrderIds: any[]) {\n    let url = this.url + 'gather';\n    return this.http.post(url, selectedOrderIds);\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {TokenStorageService} from \"./token-storage.service\";\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: TokenStorageService,\r\n              private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean\r\n  {\r\n    if (this.authService.isAuthenticated()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/'], {\r\n        queryParams: {auth: false}\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:8080/api/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(credentials): Observable<any> {\r\n    console.log(\"ashedf\");\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username: credentials.username,\r\n      password: credentials.password\r\n    }, httpOptions);\r\n  }\r\n\r\n  register(user): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password\r\n    }, httpOptions);\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService} from \"../token-storage.service\";\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user) {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser() {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n\r\n  public isAuthenticated():boolean{\r\n    return !!sessionStorage.getItem(TOKEN_KEY)\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\nexport class Offer {\n  id: number;\n  produktName: string;\n  produktMaker: string;\n  produktPrise: string;\n  produktRegularPrise: string;\n  produktDescription: string;\n  imageLink: string;\n  vonDate: string;\n  bisDate: string;\n  discounterName: string;\n  kategorie: string;\n  url: string;\n  discounterLogo: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StartService {\n  private url = 'http://localhost:8080/home/';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getPenny(): Observable<Offer[]> {\n    let url = this.url + 'penny';\n\n    return this.http.get<Offer[]>(url)\n  }\n\n  getLidl(): Observable<Offer[]> {\n    let url = this.url + 'lidl';\n\n    return this.http.get<Offer[]>(url)\n  }\n\n  getAll(): Observable<Offer[]> {\n    let url = this.url + 'all';\n\n    return this.http.get<Offer[]>(url)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
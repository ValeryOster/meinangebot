{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/posts/posts.component.ts","webpack:///src/app/posts/posts.component.html","webpack:///src/app/service/bwb.service.ts","webpack:///src/app/service/posts.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","bwbService","title","posts","text","getTitle","subscribe","srv","console","log","post","unshift","filter","value","AppModule","declarations","providers","bootstrap","HomeComponent","router","navigate","goToPostPage","PostComponent","route","postsService","params","getById","PostsComponent","Bewerbung","BwbService","http","url","get","providedIn","PostsService","find","p","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {\n}\n","<h1>About page</h1>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet, magnam!</p>\n\n<p><a href=\"#\">Show Extra</a></p>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {AboutComponent} from \"./about/about.component\";\nimport {PostsComponent} from \"./posts/posts.component\";\nimport {PostComponent} from \"./post/post.component\";\n\n\nconst routes: Routes = [\n  {path: '',component: HomeComponent},\n  {path: 'about',component: AboutComponent},\n  {path: 'posts',component: PostsComponent},\n  {path: 'posts/:id', component: PostComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {BwbService} from \"./service/bwb.service\";\nexport interface Post {\n  title: string\n  text: string\n  id?: number\n}\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Hier entsteht Seite mit Angeboten von allen Märkte';\n  posts : Post[] = [\n    {title: 'Ich lerne Java', text:\"Und ich lerne mit Spring Boot\", id:1},\n    {title: 'Ich lerne Angular', text:\"Und ich lerne\", id:2}\n  ]\n  constructor(public bwbService:BwbService) {\n  }\n\n  ngOnInit(): void {\n    this.bwbService.getTitle().subscribe(srv=>{\n      console.log(srv);\n    })\n  }\n\n  updatePosts(post:Post) {\n    this.posts.unshift(post)\n  }\n\n  removePost(id:number) {\n    this.posts = this.posts.filter(value => value.id !== id);\n  }\n}\n","<nav class=\"navbar\">\n  <h1>\n    <a [routerLink]=\"['/']\">Angular Routing</a>\n  </h1>\n  <ul>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <a [routerLink]=\"['/']\">Home</a>\n    </li>\n    <li routerLinkActive=\"active\"><a routerLink=\"/posts\">Posts</a></li>\n    <li routerLinkActive=\"active\"><a [routerLink]=\"['/about']\">About</a></li>\n    <li><button class=\"btn\">Login</button></li>\n    <li><button class=\"btn\">Logout</button></li>\n  </ul>\n</nav>\n\n<div class=\"container\">\n  <div class=\"card\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {PostComponent} from \"./post/post.component\";\nimport {PostsComponent} from \"./posts/posts.component\";\nimport {AboutComponent} from \"./about/about.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PostComponent,\n    PostsComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component} from '@angular/core'\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  constructor(private router: Router) {\n  }\n\n  goToPostPage() {\n    this.router.navigate(['/posts']);\n  }\n}\n","<h1>Home page</h1>\n\n<div>\n  <button class=\"btn\" (click)=\"goToPostPage()\">Go to Posts</button>\n</div>\n","import {Component, OnInit} from '@angular/core'\nimport {ActivatedRoute, Params} from \"@angular/router\";\nimport {PostsService} from \"../service/posts.service\";\nimport {Post} from \"../app.component\";\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n  post: Post\n\n  constructor(private route: ActivatedRoute, private postsService: PostsService) {\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.post = this.postsService.getById(+params.id);\n    })\n  }\n}\n","<div>\n  <button class=\"btn\">Back</button>\n\n  <h1>{{post.title}}</h1>\n\n  <p>{{post.text}}</p>\n\n  <button class=\"btn btn-danger\" >Load 4 post</button>\n</div>\n","import {Component} from '@angular/core'\nimport {PostsService} from \"../service/posts.service\";\n\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent {\n  constructor(public postsService: PostsService) {}\n}\n","<h1>Posts page</h1>\n\n<button class=\"btn\">\n  Show Ids\n</button>\n<button class=\"btn\">\n  Show Ids (program)\n</button>\n\n<div class=\"card\" *ngFor=\"let post of postsService.posts\">\n  <h4>\n    <a [routerLink]=\"['/posts', post.id]\">\n      <strong>(ID {{post.id}})</strong>\n      {{post.title}}\n    </a>\n  </h4>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport class Bewerbung {\r\n  id: number;\r\n  userId: number;\r\n  firmName: string;\r\n  firmAdress: string;\r\n  ansprechPartner: string;\r\n  telNummer: string;\r\n  zustand: string;\r\n  notizen: string;\r\n  bewerbungsDatum: string;\r\n  email: string;\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class BwbService {\r\n  private url = 'http://localhost:8080/';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getTitle(): Observable<string> {\r\n    return this.http.get<string>(this.url + 'home');\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core'\n\nexport interface Post {\n  title: string\n  text: string\n  id: number\n}\n\n@Injectable({providedIn: 'root'})\nexport class PostsService {\n  posts: Post[] = [\n    {title: 'Post 1', text: 'Sample text for post 1', id: 11},\n    {title: 'Post 2', text: 'Sample text for post 2', id: 22},\n    {title: 'Post 3', text: 'Sample text for post 3', id: 33},\n    {title: 'Post 4', text: 'Sample text for post 4', id: 44},\n  ]\n\n  getById(id: number) {\n    return this.posts.find(p => p.id === id)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}